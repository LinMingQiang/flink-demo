<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.flink.learn</groupId>
    <artifactId>flink-learn</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <modules>
        <module>flink-util</module>
        <module>flink-testutil</module>
        <module>flink-sourcesink</module>
        <module>flink-cep</module>
        <module>flink-core</module>
        <module>resources</module>
        <module>flink-sql</module>
        <module>assembly</module>
        <module>external-library</module>
    </modules>
    <name>${project.artifactId}</name>
    <description>My wonderfull scala app</description>
    <inceptionYear>2015</inceptionYear>
    <licenses>
        <license>
            <name>My License</name>
            <url>http://....</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <encoding>UTF-8</encoding>
        <flink.version>1.12.0</flink.version>
        <scala.version>2.12.8</scala.version>
        <scala.binary.version>2.12</scala.binary.version>
        <fastjson.version>1.2.39</fastjson.version>
        <hbase.version>1.3.2</hbase.version>
    </properties>
    <repositories>
        <repository>
            <id>mavs</id>
            <name>Repository for JDK 1.4 builds</name>
            <url>https://repo1.maven.org/maven2/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>aliyun</id>
            <name>aliyun repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>spring.repository</id>
            <name>Spring Repository</name>
            <url>http://repo.spring.io/release</url>
        </repository>
        <repository>
            <id>mob-repos</id>
            <name>mob Repository</name>
            <url>http://mvn.code.mob.com:8081/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>mob-snapshot</id>
            <name>Mob Snapshot Repository</name>
            <url>http://mvn.code.mob.com:8081/nexus/content/repositories/snapshots/</url>
        </repository>
    </repositories>
    <dependencyManagement>

        <dependencies>
            <!-- https://mvnrepository.com/artifact/org.apache.flink/flink-hbase -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-hbase_${scala.binary.version}</artifactId>
                <version>1.10.1</version>
            </dependency>

            <!--   解决guava包冲突问题     -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-shaded-client</artifactId>
                <version>${hbase.version}</version>
            </dependency>
            <!--      LUR 缓存 -->
            <!--        <dependency>-->
            <!--            <groupId>com.google.guava</groupId>-->
            <!--            <artifactId>guava</artifactId>-->
            <!--            <version>28.0-jre</version>-->
            <!--        </dependency>-->
            <!-- https://mvnrepository.com/artifact/org.apache.flink/flink-state-processor-api -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-state-processor-api_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>${scope.value}</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka_2.10 -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <version>0.8.2.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-cep-scala_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
                <scope.value>provided</scope.value>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>local</id>
            <properties>
                <env>local</env>
                <scope.value>compile</scope.value>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>pre</id>
            <properties>
                <env>pre</env>
                <scope.value>provided</scope.value>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <env>prod</env>
                <scope.value>provided</scope.value>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <configuration>
                    <configLocation>/Users/eminem/workspace/flink/flink-learn/resources/file/scalastyle-config.xml
                    </configLocation>
                </configuration>
                <version>0.8.0</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.scalastyle</groupId>
                    <artifactId>scalastyle-maven-plugin</artifactId>
                    <configuration>
                        <configLocation>${project.basedir}/../resources/file/scalastyle-config.xml</configLocation>
                    </configuration>
                    <version>0.8.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- 这个是必须的 -->
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.2</version>
                    <executions>
                        <!-- Run scala compiler in the process-resources phase, so that dependencies on
                            scala classes can be resolved later in the (Java) compile phase -->
                        <execution>
                            <id>scala-compile-first</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>

                        <!-- Run scala compiler in the process-test-resources phase, so that dependencies on
                             scala classes can be resolved later in the (Java) test-compile phase -->
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <jvmArgs>
                            <jvmArg>-Xms128m</jvmArg>
                            <jvmArg>-Xmx512m</jvmArg>
                        </jvmArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>maven-scala-plugin</artifactId>
                    <version>2.15.2</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <phase>compile</phase>
                        </execution>
                        <execution>
                            <id>testCompile</id>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <phase>test</phase>
                        </execution>
                        <execution>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--   jar包打一起         -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.5</version>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                    </configuration>
                    <!--   jar包打一起         -->
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>assembly</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--   jar包打进一个lib下         -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>
                                    ${project.build.directory}/lib
                                </outputDirectory>
                                <excludeArtifactIds>
                                    spark-core_2.10,
                                    spark-streaming_2.10
                                </excludeArtifactIds>
                                <!-- <excludeArtifactIds> spark-core_2.10, json, hbase-client, spark-streaming_2.10
                                    </excludeArtifactIds> <excludeGroupIds> org.apache.hadoop </excludeGroupIds> -->

                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
